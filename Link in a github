-- =================================================================================================
-- FINAL, ALL-IN-ONE BLINDHUB LOADER
-- This is the only script you need to run.
-- =================================================================================================

-- The URL to your UI library on GitHub.
local LIBRARY_URL = "https://raw.githubusercontent.com/Blind-Man-Walking/TestingUi/refs/heads/main/Test"

--[[ --- 1. Load the Library --- ]]
local MyLibrary, MyLibrary_Success = pcall(function()
	return loadstring(game:HttpGet(LIBRARY_URL))()
end)

if not MyLibrary_Success then
	warn("BlindHub | CRITICAL ERROR:", MyLibrary)
	return
end

print("BlindHub | Your UI Library loaded successfully!")


--[[ --- 2. Define the Main Hub Logic --- ]]
-- This function contains ALL the UI creation logic. It will run only AFTER a correct key is entered.
local function LoadMainHub()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Workspace = game:GetService("Workspace")
    local UserInputService = game:GetService("UserInputService")
    local originalWalkSpeed = 16

	local Window = MyLibrary.CreateWindow({ Title = "|   BlindHub MM2   |: https://discord.gg/YourDiscord" })
	Window:SetTheme("Purple")

    -- Make the window and its tabs globally accessible if needed by other small scripts
    getgenv().Window = Window
    getgenv().Tabs = {}

	--- TAB: MAIN ---
	local mainTab = Window:AddTab("Main")
    getgenv().Tabs.Main = mainTab
    local player = Players.LocalPlayer
    mainTab:AddLabel("Welcome, " .. player.DisplayName .. "!")
    local discordButton = mainTab:AddButton("Copy Discord Link")
    discordButton.MouseButton1Click:Connect(function()
        if setclipboard then
            setclipboard("https://discord.gg/YourDiscord")
            Window:ShowNotification({ Text = "Discord link copied!", Color = Color3.new(1,1,1) })
        end
    end)

	--- TAB: SETTINGS ---
	local settingsTab = Window:AddTab("Settings")
    getgenv().Tabs.Settings = settingsTab
    settingsTab:AddLabel("Theme & Appearance")
    local themeNames = {}
    pcall(function()
        for name in pairs(MyLibrary.Themes) do table.insert(themeNames, name) end
        table.sort(themeNames)
    end)
    local themeDropdown = settingsTab:AddDropdown({ Text = "UI Theme", Options = themeNames })
    themeDropdown.State.Changed:Connect(function(newValue) Window:SetTheme(newValue) end)
    local transparencySlider = settingsTab:AddSlider({ Text = "UI Transparency", Min = 0, Max = 100, Default = 80 })
    transparencySlider.State.Changed:Connect(function(newValue) Window:SetTransparency(newValue) end)

	--- TAB: MM2 ESP ---
	local espTab = Window:AddTab("MM2 ESP")
    getgenv().Tabs.ESP = espTab
	espTab:AddLabel("Visuals")
	local coinEspToggle = espTab:AddToggle("Coin ESP")
    -- (Logic for Coin ESP would go here in the .State.Changed event)

	--- TAB: MM2 PLAYER ---
	local playerTab = Window:AddTab("MM2 Player")
    getgenv().Tabs.Player = playerTab
	playerTab:AddLabel("Movement")
	local walkspeedToggle = playerTab:AddToggle("Modify Walkspeed")
    local walkspeedSlider = playerTab:AddSlider({ Text = "Walkspeed", Min = 16, Max = 200, Default = originalWalkSpeed })
    walkspeedSlider.Visible = false
    walkspeedToggle.State.Changed:Connect(function(enabled)
        walkspeedSlider.Visible = enabled
        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid and not enabled then humanoid.WalkSpeed = originalWalkSpeed end
    end)
    walkspeedSlider.State.Changed:Connect(function(value)
        if walkspeedToggle.State.Value then
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then humanoid.WalkSpeed = value end
        end
    end)

	print("BlindHub Main UI is now loaded!")
end


--[[ --- 3. Start the Key System --- ]]
-- This calls your library's key system and tells it to run our `LoadMainHub` function on success.
MyLibrary.CreateKeySystem(LoadMainHub)
